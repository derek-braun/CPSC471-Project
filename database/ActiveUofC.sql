-- MySQL Script generated by MySQL Workbench
-- Wed Dec  4 11:58:14 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ActiveUofC
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ActiveUofC
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ActiveUofC` DEFAULT CHARACTER SET utf8 ;
USE `ActiveUofC` ;

-- -----------------------------------------------------
-- Table `ActiveUofC`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`USER` (
  `username` VARCHAR(25) NOT NULL,
  `password` VARCHAR(25) NOT NULL,
  `type` VARCHAR(15) NOT NULL,
  `birthdate` DATE NOT NULL,
  `age` INT NOT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`GROUPA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`GROUPA` (
  `title` VARCHAR(30) NOT NULL,
  `numMembers` INT NOT NULL,
  `creatorUser` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`title`),
  INDEX `username_idx` (`creatorUser` ASC) VISIBLE,
  CONSTRAINT `creatorUser`
    FOREIGN KEY (`creatorUser`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`ADMIN_USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`ADMIN_USER` (
  `username` VARCHAR(25) NOT NULL,
  `designation` VARCHAR(20) NULL,
  PRIMARY KEY (`username`),
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`INTEREST_TOPIC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`INTEREST_TOPIC` (
  `name` VARCHAR(30) NOT NULL,
  `isActive` TINYINT NOT NULL,
  `adminRemove` VARCHAR(25) NULL,
  `username` VARCHAR(25) NULL,
  PRIMARY KEY (`name`),
  INDEX `adminRemove_idx` (`adminRemove` ASC) VISIBLE,
  INDEX `username_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `adminRemove`
    FOREIGN KEY (`adminRemove`)
    REFERENCES `ActiveUofC`.`ADMIN_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`USER_INTEREST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`USER_INTEREST` (
  `interestName` VARCHAR(30) NOT NULL,
  `username` VARCHAR(25) NOT NULL,
  `experience` INT NOT NULL,
  PRIMARY KEY (`interestName`, `username`),
  INDEX `username_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `interestName`
    FOREIGN KEY (`interestName`)
    REFERENCES `ActiveUofC`.`INTEREST_TOPIC` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
CONSTRAINT 'explow' CHECK (('experience' > 0)),
CONSTRAINT 'exphigh' CHECK (('experience' < 6))
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FACULTY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FACULTY` (
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FACULTY_ASSIGNMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FACULTY_ASSIGNMENT` (
  `facultyName` VARCHAR(20) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`facultyName`, `username`),
  INDEX `username_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `facultyName`
    FOREIGN KEY (`facultyName`)
    REFERENCES `ActiveUofC`.`FACULTY` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`BLACKLIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`BLACKLIST` (
  `byUser` VARCHAR(25) NOT NULL,
  `forUser` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`byUser`, `forUser`),
  INDEX `forUser_idx` (`forUser` ASC) VISIBLE,
  CONSTRAINT `byUser`
    FOREIGN KEY (`byUser`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `forUser`
    FOREIGN KEY (`forUser`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`ACTIVITY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`ACTIVITY` (
  `activityID` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(30) NOT NULL,
  `startTime` DATETIME NOT NULL,
  `username` VARCHAR(25) NOT NULL,
  `description` VARCHAR(150) NULL,
  `duration` TIME NULL,
  `isActive` TINYINT NOT NULL,
  `group` VARCHAR(30) NULL,
  `interest` VARCHAR(30) NULL,
  `adminRemove` VARCHAR(25) NULL,
  PRIMARY KEY (`activityID`),
  INDEX `username_idx` (`username` ASC) VISIBLE,
  INDEX `adminRemove_idx` (`adminRemove` ASC) VISIBLE,
  INDEX `group_idx` (`group` ASC) VISIBLE,
  INDEX `interest_idx` (`interest` ASC) VISIBLE,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `adminRemove`
    FOREIGN KEY (`adminRemove`)
    REFERENCES `ActiveUofC`.`ADMIN_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `group`
    FOREIGN KEY (`group`)
    REFERENCES `ActiveUofC`.`GROUPA` (`title`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `interest`
    FOREIGN KEY (`interest`)
    REFERENCES `ActiveUofC`.`INTEREST_TOPIC` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FACILITY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FACILITY` (
  `code` VARCHAR(6) NOT NULL,
  `room#` INT NOT NULL,
  `outdoorBool` TINYINT NOT NULL,
  `adminUser` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`code`, `room#`),
  INDEX `adminUser_idx` (`adminUser` ASC) VISIBLE,
  CONSTRAINT `adminUser`
    FOREIGN KEY (`adminUser`)
    REFERENCES `ActiveUofC`.`ADMIN_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FACILITY_USE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FACILITY_USE` (
  `facilityCode` VARCHAR(6) NOT NULL,
  `facilityRoom#` INT NOT NULL,
  `activityID` INT NOT NULL,
  PRIMARY KEY (`facilityCode`, `facilityRoom#`, `activityID`),
  INDEX `facilityRoom#_idx` (`facilityRoom#` ASC) VISIBLE,
  INDEX `activityID_idx` (`activityID` ASC) VISIBLE,
  CONSTRAINT `faciltyCode`
    FOREIGN KEY (`facilityCode`)
    REFERENCES `ActiveUofC`.`FACILITY` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `facilityRoom#`
    FOREIGN KEY (`facilityRoom#`)
    REFERENCES `ActiveUofC`.`FACILITY` (`room#`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `activityID`
    FOREIGN KEY (`activityID`)
    REFERENCES `ActiveUofC`.`ACTIVITY` (`activityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`CONFIRMATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`CONFIRMATION` (
  `confirmationID` INT NOT NULL AUTO_INCREMENT,
  `activityID` INT NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`confirmationID`),
  INDEX `activityID_idx` (`activityID` ASC) VISIBLE,
  CONSTRAINT `activityID`
    FOREIGN KEY (`activityID`)
    REFERENCES `ActiveUofC`.`ACTIVITY` (`activityID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`CONFIRMATION_SEND`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`CONFIRMATION_SEND` (
  `confirmationID` INT NOT NULL,
  `username` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`confirmationID`, `username`),
  INDEX `username_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `confirmationID`
    FOREIGN KEY (`confirmationID`)
    REFERENCES `ActiveUofC`.`CONFIRMATION` (`confirmationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`CLIENT_USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`CLIENT_USER` (
  `username` VARCHAR(25) NOT NULL,
  `isActive` TINYINT NOT NULL,
  `adminRemove` VARCHAR(25) NULL,
  PRIMARY KEY (`username`),
  INDEX `adminRemove_idx` (`adminRemove` ASC) VISIBLE,
  CONSTRAINT `username`
    FOREIGN KEY (`username`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `adminRemove`
    FOREIGN KEY (`adminRemove`)
    REFERENCES `ActiveUofC`.`ADMIN_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FEEDBACK`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FEEDBACK` (
  `feedbackID` INT NOT NULL AUTO_INCREMENT,
  `clientName` VARCHAR(25) NOT NULL,
  `content` VARCHAR(150) NOT NULL,
  `type` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`feedbackID`),
  INDEX `clientName_idx` (`clientName` ASC) VISIBLE,
  CONSTRAINT `clientName`
    FOREIGN KEY (`clientName`)
    REFERENCES `ActiveUofC`.`CLIENT_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`FEEDBACK_VIEW`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`FEEDBACK_VIEW` (
  `feedbackID` INT NOT NULL,
  `adminUsername` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`feedbackID`, `adminUsername`),
  INDEX `adminUsername_idx` (`adminUsername` ASC) VISIBLE,
  CONSTRAINT `feedbackID`
    FOREIGN KEY (`feedbackID`)
    REFERENCES `ActiveUofC`.`FEEDBACK` (`feedbackID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `adminUsername`
    FOREIGN KEY (`adminUsername`)
    REFERENCES `ActiveUofC`.`ADMIN_USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`ACTIVITY_PARTICIPATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`ACTIVITY_PARTICIPATION` (
  `activityID` INT NOT NULL,
  `member` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`activityID`, `member`),
  INDEX `member_idx` (`member` ASC) VISIBLE,
  CONSTRAINT `activityID`
    FOREIGN KEY (`activityID`)
    REFERENCES `ActiveUofC`.`ACTIVITY` (`activityID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `member`
    FOREIGN KEY (`member`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`GROUP_MEMBERSHIP`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`GROUP_MEMBERSHIP` (
  `groupTitle` VARCHAR(30) NOT NULL,
  `member` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`groupTitle`, `member`),
  INDEX `member_idx` (`member` ASC) VISIBLE,
  CONSTRAINT `groupTitle`
    FOREIGN KEY (`groupTitle`)
    REFERENCES `ActiveUofC`.`GROUPA` (`title`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `member`
    FOREIGN KEY (`member`)
    REFERENCES `ActiveUofC`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ActiveUofC`.`GROUP_FOCUS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ActiveUofC`.`GROUP_FOCUS` (
  `groupTitle` VARCHAR(30) NOT NULL,
  `interestName` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`groupTitle`, `interestName`),
  INDEX `interestName_idx` (`interestName` ASC) VISIBLE,
  CONSTRAINT `groupTitle`
    FOREIGN KEY (`groupTitle`)
    REFERENCES `ActiveUofC`.`GROUPA` (`title`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `interestName`
    FOREIGN KEY (`interestName`)
    REFERENCES `ActiveUofC`.`INTEREST_TOPIC` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ActiveUofC`;

DELIMITER $$
USE `ActiveUofC`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ActiveUofC`.`GROUP_MEMBERSHIP_AFTER_INSERT` AFTER INSERT ON `GROUP_MEMBERSHIP` FOR EACH ROW
BEGIN
	update GROUPA SET numMembers = numMembers + 1 WHERE NEW.groupTitle = title;
END$$

USE `ActiveUofC`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ActiveUofC`.`GROUP_MEMBERSHIP_AFTER_DELETE` AFTER DELETE ON `GROUP_MEMBERSHIP` FOR EACH ROW
BEGIN
	update GROUPA SET numMembers = numMembers - 1 WHERE NEW.groupTitle = title;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
